// source: trigger_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.trigger_service.CheckServiceHealthReq', null, global);
goog.exportSymbol('proto.trigger_service.CheckServiceHealthRes', null, global);
goog.exportSymbol('proto.trigger_service.CreateTriggerReq', null, global);
goog.exportSymbol('proto.trigger_service.CreateTriggerRes', null, global);
goog.exportSymbol('proto.trigger_service.DeleteTriggerReq', null, global);
goog.exportSymbol('proto.trigger_service.DeleteTriggerRes', null, global);
goog.exportSymbol('proto.trigger_service.Exchange', null, global);
goog.exportSymbol('proto.trigger_service.GetTriggerReq', null, global);
goog.exportSymbol('proto.trigger_service.GetTriggerRes', null, global);
goog.exportSymbol('proto.trigger_service.StartServiceReq', null, global);
goog.exportSymbol('proto.trigger_service.StartServiceRes', null, global);
goog.exportSymbol('proto.trigger_service.StopServiceReq', null, global);
goog.exportSymbol('proto.trigger_service.StopServiceRes', null, global);
goog.exportSymbol('proto.trigger_service.TriggerAttrib', null, global);
goog.exportSymbol('proto.trigger_service.TriggerOperator', null, global);
goog.exportSymbol('proto.trigger_service.TriggerStatusReq', null, global);
goog.exportSymbol('proto.trigger_service.TriggerStatusRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.CreateTriggerReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.CreateTriggerReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.CreateTriggerReq.displayName = 'proto.trigger_service.CreateTriggerReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.CreateTriggerRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.CreateTriggerRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.CreateTriggerRes.displayName = 'proto.trigger_service.CreateTriggerRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.TriggerStatusReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.TriggerStatusReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.TriggerStatusReq.displayName = 'proto.trigger_service.TriggerStatusReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.TriggerStatusRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.TriggerStatusRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.TriggerStatusRes.displayName = 'proto.trigger_service.TriggerStatusRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.GetTriggerReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.GetTriggerReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.GetTriggerReq.displayName = 'proto.trigger_service.GetTriggerReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.GetTriggerRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.GetTriggerRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.GetTriggerRes.displayName = 'proto.trigger_service.GetTriggerRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.StartServiceReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.StartServiceReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.StartServiceReq.displayName = 'proto.trigger_service.StartServiceReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.StartServiceRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.StartServiceRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.StartServiceRes.displayName = 'proto.trigger_service.StartServiceRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.StopServiceReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.StopServiceReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.StopServiceReq.displayName = 'proto.trigger_service.StopServiceReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.StopServiceRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.StopServiceRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.StopServiceRes.displayName = 'proto.trigger_service.StopServiceRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.DeleteTriggerReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.DeleteTriggerReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.DeleteTriggerReq.displayName = 'proto.trigger_service.DeleteTriggerReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.DeleteTriggerRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.DeleteTriggerRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.DeleteTriggerRes.displayName = 'proto.trigger_service.DeleteTriggerRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.CheckServiceHealthReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.CheckServiceHealthReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.CheckServiceHealthReq.displayName = 'proto.trigger_service.CheckServiceHealthReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trigger_service.CheckServiceHealthRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trigger_service.CheckServiceHealthRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.trigger_service.CheckServiceHealthRes.displayName = 'proto.trigger_service.CheckServiceHealthRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.CreateTriggerReq.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.CreateTriggerReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.CreateTriggerReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.CreateTriggerReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tattrib: jspb.Message.getFieldWithDefault(msg, 2, 0),
    operator: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    tnearprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    scrip: jspb.Message.getFieldWithDefault(msg, 6, ""),
    kitetoken: jspb.Message.getFieldWithDefault(msg, 7, ""),
    exchangetoken: jspb.Message.getFieldWithDefault(msg, 8, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.CreateTriggerReq}
 */
proto.trigger_service.CreateTriggerReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.CreateTriggerReq;
  return proto.trigger_service.CreateTriggerReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.CreateTriggerReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.CreateTriggerReq}
 */
proto.trigger_service.CreateTriggerReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.trigger_service.TriggerAttrib} */ (reader.readEnum());
      msg.setTattrib(value);
      break;
    case 3:
      var value = /** @type {!proto.trigger_service.TriggerOperator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTprice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTnearprice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setScrip(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setKitetoken(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangetoken(value);
      break;
    case 9:
      var value = /** @type {!proto.trigger_service.Exchange} */ (reader.readEnum());
      msg.setExchange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.CreateTriggerReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.CreateTriggerReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.CreateTriggerReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.CreateTriggerReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTattrib();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTprice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTnearprice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getScrip();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getKitetoken();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExchangetoken();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExchange();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.trigger_service.CreateTriggerReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.CreateTriggerReq} returns this
 */
proto.trigger_service.CreateTriggerReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TriggerAttrib tAttrib = 2;
 * @return {!proto.trigger_service.TriggerAttrib}
 */
proto.trigger_service.CreateTriggerReq.prototype.getTattrib = function() {
  return /** @type {!proto.trigger_service.TriggerAttrib} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.trigger_service.TriggerAttrib} value
 * @return {!proto.trigger_service.CreateTriggerReq} returns this
 */
proto.trigger_service.CreateTriggerReq.prototype.setTattrib = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional TriggerOperator operator = 3;
 * @return {!proto.trigger_service.TriggerOperator}
 */
proto.trigger_service.CreateTriggerReq.prototype.getOperator = function() {
  return /** @type {!proto.trigger_service.TriggerOperator} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.trigger_service.TriggerOperator} value
 * @return {!proto.trigger_service.CreateTriggerReq} returns this
 */
proto.trigger_service.CreateTriggerReq.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double tPrice = 4;
 * @return {number}
 */
proto.trigger_service.CreateTriggerReq.prototype.getTprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.trigger_service.CreateTriggerReq} returns this
 */
proto.trigger_service.CreateTriggerReq.prototype.setTprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double tNearPrice = 5;
 * @return {number}
 */
proto.trigger_service.CreateTriggerReq.prototype.getTnearprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.trigger_service.CreateTriggerReq} returns this
 */
proto.trigger_service.CreateTriggerReq.prototype.setTnearprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string scrip = 6;
 * @return {string}
 */
proto.trigger_service.CreateTriggerReq.prototype.getScrip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.CreateTriggerReq} returns this
 */
proto.trigger_service.CreateTriggerReq.prototype.setScrip = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string kiteToken = 7;
 * @return {string}
 */
proto.trigger_service.CreateTriggerReq.prototype.getKitetoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.CreateTriggerReq} returns this
 */
proto.trigger_service.CreateTriggerReq.prototype.setKitetoken = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string exchangeToken = 8;
 * @return {string}
 */
proto.trigger_service.CreateTriggerReq.prototype.getExchangetoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.CreateTriggerReq} returns this
 */
proto.trigger_service.CreateTriggerReq.prototype.setExchangetoken = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Exchange Exchange = 9;
 * @return {!proto.trigger_service.Exchange}
 */
proto.trigger_service.CreateTriggerReq.prototype.getExchange = function() {
  return /** @type {!proto.trigger_service.Exchange} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.trigger_service.Exchange} value
 * @return {!proto.trigger_service.CreateTriggerReq} returns this
 */
proto.trigger_service.CreateTriggerReq.prototype.setExchange = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.CreateTriggerRes.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.CreateTriggerRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.CreateTriggerRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.CreateTriggerRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.CreateTriggerRes}
 */
proto.trigger_service.CreateTriggerRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.CreateTriggerRes;
  return proto.trigger_service.CreateTriggerRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.CreateTriggerRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.CreateTriggerRes}
 */
proto.trigger_service.CreateTriggerRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.CreateTriggerRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.CreateTriggerRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.CreateTriggerRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.CreateTriggerRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.trigger_service.CreateTriggerRes.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trigger_service.CreateTriggerRes} returns this
 */
proto.trigger_service.CreateTriggerRes.prototype.setOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.TriggerStatusReq.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.TriggerStatusReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.TriggerStatusReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.TriggerStatusReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    triggerid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.TriggerStatusReq}
 */
proto.trigger_service.TriggerStatusReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.TriggerStatusReq;
  return proto.trigger_service.TriggerStatusReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.TriggerStatusReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.TriggerStatusReq}
 */
proto.trigger_service.TriggerStatusReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.TriggerStatusReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.TriggerStatusReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.TriggerStatusReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.TriggerStatusReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string triggerId = 1;
 * @return {string}
 */
proto.trigger_service.TriggerStatusReq.prototype.getTriggerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.TriggerStatusReq} returns this
 */
proto.trigger_service.TriggerStatusReq.prototype.setTriggerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.TriggerStatusRes.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.TriggerStatusRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.TriggerStatusRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.TriggerStatusRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.TriggerStatusRes}
 */
proto.trigger_service.TriggerStatusRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.TriggerStatusRes;
  return proto.trigger_service.TriggerStatusRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.TriggerStatusRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.TriggerStatusRes}
 */
proto.trigger_service.TriggerStatusRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.TriggerStatusRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.TriggerStatusRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.TriggerStatusRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.TriggerStatusRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.trigger_service.TriggerStatusRes.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.TriggerStatusRes} returns this
 */
proto.trigger_service.TriggerStatusRes.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.GetTriggerReq.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.GetTriggerReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.GetTriggerReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.GetTriggerReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    triggerid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.GetTriggerReq}
 */
proto.trigger_service.GetTriggerReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.GetTriggerReq;
  return proto.trigger_service.GetTriggerReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.GetTriggerReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.GetTriggerReq}
 */
proto.trigger_service.GetTriggerReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.GetTriggerReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.GetTriggerReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.GetTriggerReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.GetTriggerReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string triggerId = 1;
 * @return {string}
 */
proto.trigger_service.GetTriggerReq.prototype.getTriggerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.GetTriggerReq} returns this
 */
proto.trigger_service.GetTriggerReq.prototype.setTriggerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.GetTriggerRes.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.GetTriggerRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.GetTriggerRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.GetTriggerRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tattrib: jspb.Message.getFieldWithDefault(msg, 2, 0),
    operator: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    tnearprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    scrip: jspb.Message.getFieldWithDefault(msg, 6, ""),
    kitetoken: jspb.Message.getFieldWithDefault(msg, 7, ""),
    exchangetoken: jspb.Message.getFieldWithDefault(msg, 8, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.GetTriggerRes}
 */
proto.trigger_service.GetTriggerRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.GetTriggerRes;
  return proto.trigger_service.GetTriggerRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.GetTriggerRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.GetTriggerRes}
 */
proto.trigger_service.GetTriggerRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.trigger_service.TriggerAttrib} */ (reader.readEnum());
      msg.setTattrib(value);
      break;
    case 3:
      var value = /** @type {!proto.trigger_service.TriggerOperator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTprice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTnearprice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setScrip(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setKitetoken(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangetoken(value);
      break;
    case 9:
      var value = /** @type {!proto.trigger_service.Exchange} */ (reader.readEnum());
      msg.setExchange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.GetTriggerRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.GetTriggerRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.GetTriggerRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.GetTriggerRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTattrib();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTprice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTnearprice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getScrip();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getKitetoken();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExchangetoken();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExchange();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.trigger_service.GetTriggerRes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.GetTriggerRes} returns this
 */
proto.trigger_service.GetTriggerRes.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TriggerAttrib tAttrib = 2;
 * @return {!proto.trigger_service.TriggerAttrib}
 */
proto.trigger_service.GetTriggerRes.prototype.getTattrib = function() {
  return /** @type {!proto.trigger_service.TriggerAttrib} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.trigger_service.TriggerAttrib} value
 * @return {!proto.trigger_service.GetTriggerRes} returns this
 */
proto.trigger_service.GetTriggerRes.prototype.setTattrib = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional TriggerOperator operator = 3;
 * @return {!proto.trigger_service.TriggerOperator}
 */
proto.trigger_service.GetTriggerRes.prototype.getOperator = function() {
  return /** @type {!proto.trigger_service.TriggerOperator} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.trigger_service.TriggerOperator} value
 * @return {!proto.trigger_service.GetTriggerRes} returns this
 */
proto.trigger_service.GetTriggerRes.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double tPrice = 4;
 * @return {number}
 */
proto.trigger_service.GetTriggerRes.prototype.getTprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.trigger_service.GetTriggerRes} returns this
 */
proto.trigger_service.GetTriggerRes.prototype.setTprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double tNearPrice = 5;
 * @return {number}
 */
proto.trigger_service.GetTriggerRes.prototype.getTnearprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.trigger_service.GetTriggerRes} returns this
 */
proto.trigger_service.GetTriggerRes.prototype.setTnearprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string scrip = 6;
 * @return {string}
 */
proto.trigger_service.GetTriggerRes.prototype.getScrip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.GetTriggerRes} returns this
 */
proto.trigger_service.GetTriggerRes.prototype.setScrip = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string kiteToken = 7;
 * @return {string}
 */
proto.trigger_service.GetTriggerRes.prototype.getKitetoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.GetTriggerRes} returns this
 */
proto.trigger_service.GetTriggerRes.prototype.setKitetoken = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string exchangeToken = 8;
 * @return {string}
 */
proto.trigger_service.GetTriggerRes.prototype.getExchangetoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.GetTriggerRes} returns this
 */
proto.trigger_service.GetTriggerRes.prototype.setExchangetoken = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Exchange Exchange = 9;
 * @return {!proto.trigger_service.Exchange}
 */
proto.trigger_service.GetTriggerRes.prototype.getExchange = function() {
  return /** @type {!proto.trigger_service.Exchange} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.trigger_service.Exchange} value
 * @return {!proto.trigger_service.GetTriggerRes} returns this
 */
proto.trigger_service.GetTriggerRes.prototype.setExchange = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.StartServiceReq.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.StartServiceReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.StartServiceReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.StartServiceReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    override: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    mock: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.StartServiceReq}
 */
proto.trigger_service.StartServiceReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.StartServiceReq;
  return proto.trigger_service.StartServiceReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.StartServiceReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.StartServiceReq}
 */
proto.trigger_service.StartServiceReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverride(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.StartServiceReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.StartServiceReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.StartServiceReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.StartServiceReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOverride();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMock();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool override = 1;
 * @return {boolean}
 */
proto.trigger_service.StartServiceReq.prototype.getOverride = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trigger_service.StartServiceReq} returns this
 */
proto.trigger_service.StartServiceReq.prototype.setOverride = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool mock = 2;
 * @return {boolean}
 */
proto.trigger_service.StartServiceReq.prototype.getMock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trigger_service.StartServiceReq} returns this
 */
proto.trigger_service.StartServiceReq.prototype.setMock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.StartServiceRes.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.StartServiceRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.StartServiceRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.StartServiceRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.StartServiceRes}
 */
proto.trigger_service.StartServiceRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.StartServiceRes;
  return proto.trigger_service.StartServiceRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.StartServiceRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.StartServiceRes}
 */
proto.trigger_service.StartServiceRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.StartServiceRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.StartServiceRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.StartServiceRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.StartServiceRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.trigger_service.StartServiceRes.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trigger_service.StartServiceRes} returns this
 */
proto.trigger_service.StartServiceRes.prototype.setOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.StopServiceReq.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.StopServiceReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.StopServiceReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.StopServiceReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    override: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    mock: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.StopServiceReq}
 */
proto.trigger_service.StopServiceReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.StopServiceReq;
  return proto.trigger_service.StopServiceReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.StopServiceReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.StopServiceReq}
 */
proto.trigger_service.StopServiceReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverride(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.StopServiceReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.StopServiceReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.StopServiceReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.StopServiceReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOverride();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMock();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool override = 1;
 * @return {boolean}
 */
proto.trigger_service.StopServiceReq.prototype.getOverride = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trigger_service.StopServiceReq} returns this
 */
proto.trigger_service.StopServiceReq.prototype.setOverride = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool mock = 2;
 * @return {boolean}
 */
proto.trigger_service.StopServiceReq.prototype.getMock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trigger_service.StopServiceReq} returns this
 */
proto.trigger_service.StopServiceReq.prototype.setMock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.StopServiceRes.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.StopServiceRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.StopServiceRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.StopServiceRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.StopServiceRes}
 */
proto.trigger_service.StopServiceRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.StopServiceRes;
  return proto.trigger_service.StopServiceRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.StopServiceRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.StopServiceRes}
 */
proto.trigger_service.StopServiceRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.StopServiceRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.StopServiceRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.StopServiceRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.StopServiceRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.trigger_service.StopServiceRes.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trigger_service.StopServiceRes} returns this
 */
proto.trigger_service.StopServiceRes.prototype.setOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.DeleteTriggerReq.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.DeleteTriggerReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.DeleteTriggerReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.DeleteTriggerReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    triggerid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.DeleteTriggerReq}
 */
proto.trigger_service.DeleteTriggerReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.DeleteTriggerReq;
  return proto.trigger_service.DeleteTriggerReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.DeleteTriggerReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.DeleteTriggerReq}
 */
proto.trigger_service.DeleteTriggerReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.DeleteTriggerReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.DeleteTriggerReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.DeleteTriggerReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.DeleteTriggerReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string triggerId = 1;
 * @return {string}
 */
proto.trigger_service.DeleteTriggerReq.prototype.getTriggerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.trigger_service.DeleteTriggerReq} returns this
 */
proto.trigger_service.DeleteTriggerReq.prototype.setTriggerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.DeleteTriggerRes.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.DeleteTriggerRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.DeleteTriggerRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.DeleteTriggerRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.DeleteTriggerRes}
 */
proto.trigger_service.DeleteTriggerRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.DeleteTriggerRes;
  return proto.trigger_service.DeleteTriggerRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.DeleteTriggerRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.DeleteTriggerRes}
 */
proto.trigger_service.DeleteTriggerRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.DeleteTriggerRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.DeleteTriggerRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.DeleteTriggerRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.DeleteTriggerRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.trigger_service.DeleteTriggerRes.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trigger_service.DeleteTriggerRes} returns this
 */
proto.trigger_service.DeleteTriggerRes.prototype.setOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.CheckServiceHealthReq.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.CheckServiceHealthReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.CheckServiceHealthReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.CheckServiceHealthReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.CheckServiceHealthReq}
 */
proto.trigger_service.CheckServiceHealthReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.CheckServiceHealthReq;
  return proto.trigger_service.CheckServiceHealthReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.CheckServiceHealthReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.CheckServiceHealthReq}
 */
proto.trigger_service.CheckServiceHealthReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.CheckServiceHealthReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.CheckServiceHealthReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.CheckServiceHealthReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.CheckServiceHealthReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.trigger_service.CheckServiceHealthRes.prototype.toObject = function(opt_includeInstance) {
  return proto.trigger_service.CheckServiceHealthRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.trigger_service.CheckServiceHealthRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.CheckServiceHealthRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trigger_service.CheckServiceHealthRes}
 */
proto.trigger_service.CheckServiceHealthRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trigger_service.CheckServiceHealthRes;
  return proto.trigger_service.CheckServiceHealthRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trigger_service.CheckServiceHealthRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trigger_service.CheckServiceHealthRes}
 */
proto.trigger_service.CheckServiceHealthRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trigger_service.CheckServiceHealthRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trigger_service.CheckServiceHealthRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trigger_service.CheckServiceHealthRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trigger_service.CheckServiceHealthRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.trigger_service.CheckServiceHealthRes.prototype.getOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.trigger_service.CheckServiceHealthRes} returns this
 */
proto.trigger_service.CheckServiceHealthRes.prototype.setOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.trigger_service.TriggerAttrib = {
  LTP: 0
};

/**
 * @enum {number}
 */
proto.trigger_service.TriggerOperator = {
  LT: 0,
  LTE: 1,
  GT: 2,
  GTE: 3
};

/**
 * @enum {number}
 */
proto.trigger_service.Exchange = {
  NSE: 0,
  BSE: 1
};

goog.object.extend(exports, proto.trigger_service);
