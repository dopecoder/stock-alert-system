// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: trigger_service.proto

package trigger_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TriggerAttrib int32

const (
	TriggerAttrib_LTP TriggerAttrib = 0
)

// Enum value maps for TriggerAttrib.
var (
	TriggerAttrib_name = map[int32]string{
		0: "LTP",
	}
	TriggerAttrib_value = map[string]int32{
		"LTP": 0,
	}
)

func (x TriggerAttrib) Enum() *TriggerAttrib {
	p := new(TriggerAttrib)
	*p = x
	return p
}

func (x TriggerAttrib) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerAttrib) Descriptor() protoreflect.EnumDescriptor {
	return file_trigger_service_proto_enumTypes[0].Descriptor()
}

func (TriggerAttrib) Type() protoreflect.EnumType {
	return &file_trigger_service_proto_enumTypes[0]
}

func (x TriggerAttrib) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerAttrib.Descriptor instead.
func (TriggerAttrib) EnumDescriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{0}
}

type TriggerOperator int32

const (
	TriggerOperator_LT  TriggerOperator = 0
	TriggerOperator_LTE TriggerOperator = 1
	TriggerOperator_GT  TriggerOperator = 2
	TriggerOperator_GTE TriggerOperator = 3
)

// Enum value maps for TriggerOperator.
var (
	TriggerOperator_name = map[int32]string{
		0: "LT",
		1: "LTE",
		2: "GT",
		3: "GTE",
	}
	TriggerOperator_value = map[string]int32{
		"LT":  0,
		"LTE": 1,
		"GT":  2,
		"GTE": 3,
	}
)

func (x TriggerOperator) Enum() *TriggerOperator {
	p := new(TriggerOperator)
	*p = x
	return p
}

func (x TriggerOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_trigger_service_proto_enumTypes[1].Descriptor()
}

func (TriggerOperator) Type() protoreflect.EnumType {
	return &file_trigger_service_proto_enumTypes[1]
}

func (x TriggerOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerOperator.Descriptor instead.
func (TriggerOperator) EnumDescriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{1}
}

type Exchange int32

const (
	Exchange_NSE Exchange = 0
	Exchange_BSE Exchange = 1
)

// Enum value maps for Exchange.
var (
	Exchange_name = map[int32]string{
		0: "NSE",
		1: "BSE",
	}
	Exchange_value = map[string]int32{
		"NSE": 0,
		"BSE": 1,
	}
)

func (x Exchange) Enum() *Exchange {
	p := new(Exchange)
	*p = x
	return p
}

func (x Exchange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Exchange) Descriptor() protoreflect.EnumDescriptor {
	return file_trigger_service_proto_enumTypes[2].Descriptor()
}

func (Exchange) Type() protoreflect.EnumType {
	return &file_trigger_service_proto_enumTypes[2]
}

func (x Exchange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Exchange.Descriptor instead.
func (Exchange) EnumDescriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{2}
}

type CreateTriggerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TAttrib       TriggerAttrib   `protobuf:"varint,2,opt,name=tAttrib,proto3,enum=trigger_service.TriggerAttrib" json:"tAttrib,omitempty"`
	Operator      TriggerOperator `protobuf:"varint,3,opt,name=operator,proto3,enum=trigger_service.TriggerOperator" json:"operator,omitempty"`
	TPrice        float64         `protobuf:"fixed64,4,opt,name=tPrice,proto3" json:"tPrice,omitempty"`
	TNearPrice    float64         `protobuf:"fixed64,5,opt,name=tNearPrice,proto3" json:"tNearPrice,omitempty"`
	Scrip         string          `protobuf:"bytes,6,opt,name=scrip,proto3" json:"scrip,omitempty"`
	KiteToken     string          `protobuf:"bytes,7,opt,name=kiteToken,proto3" json:"kiteToken,omitempty"`
	ExchangeToken string          `protobuf:"bytes,8,opt,name=exchangeToken,proto3" json:"exchangeToken,omitempty"`
	Exchange      Exchange        `protobuf:"varint,9,opt,name=Exchange,proto3,enum=trigger_service.Exchange" json:"Exchange,omitempty"`
}

func (x *CreateTriggerReq) Reset() {
	*x = CreateTriggerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTriggerReq) ProtoMessage() {}

func (x *CreateTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTriggerReq.ProtoReflect.Descriptor instead.
func (*CreateTriggerReq) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTriggerReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateTriggerReq) GetTAttrib() TriggerAttrib {
	if x != nil {
		return x.TAttrib
	}
	return TriggerAttrib_LTP
}

func (x *CreateTriggerReq) GetOperator() TriggerOperator {
	if x != nil {
		return x.Operator
	}
	return TriggerOperator_LT
}

func (x *CreateTriggerReq) GetTPrice() float64 {
	if x != nil {
		return x.TPrice
	}
	return 0
}

func (x *CreateTriggerReq) GetTNearPrice() float64 {
	if x != nil {
		return x.TNearPrice
	}
	return 0
}

func (x *CreateTriggerReq) GetScrip() string {
	if x != nil {
		return x.Scrip
	}
	return ""
}

func (x *CreateTriggerReq) GetKiteToken() string {
	if x != nil {
		return x.KiteToken
	}
	return ""
}

func (x *CreateTriggerReq) GetExchangeToken() string {
	if x != nil {
		return x.ExchangeToken
	}
	return ""
}

func (x *CreateTriggerReq) GetExchange() Exchange {
	if x != nil {
		return x.Exchange
	}
	return Exchange_NSE
}

type CreateTriggerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CreateTriggerRes) Reset() {
	*x = CreateTriggerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTriggerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTriggerRes) ProtoMessage() {}

func (x *CreateTriggerRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTriggerRes.ProtoReflect.Descriptor instead.
func (*CreateTriggerRes) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTriggerRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type TriggerStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerId string `protobuf:"bytes,1,opt,name=triggerId,proto3" json:"triggerId,omitempty"`
}

func (x *TriggerStatusReq) Reset() {
	*x = TriggerStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerStatusReq) ProtoMessage() {}

func (x *TriggerStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerStatusReq.ProtoReflect.Descriptor instead.
func (*TriggerStatusReq) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{2}
}

func (x *TriggerStatusReq) GetTriggerId() string {
	if x != nil {
		return x.TriggerId
	}
	return ""
}

type TriggerStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TriggerStatusRes) Reset() {
	*x = TriggerStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerStatusRes) ProtoMessage() {}

func (x *TriggerStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerStatusRes.ProtoReflect.Descriptor instead.
func (*TriggerStatusRes) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{3}
}

func (x *TriggerStatusRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetTriggerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerId string `protobuf:"bytes,1,opt,name=triggerId,proto3" json:"triggerId,omitempty"`
}

func (x *GetTriggerReq) Reset() {
	*x = GetTriggerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTriggerReq) ProtoMessage() {}

func (x *GetTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTriggerReq.ProtoReflect.Descriptor instead.
func (*GetTriggerReq) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetTriggerReq) GetTriggerId() string {
	if x != nil {
		return x.TriggerId
	}
	return ""
}

type GetTriggerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TAttrib       TriggerAttrib   `protobuf:"varint,2,opt,name=tAttrib,proto3,enum=trigger_service.TriggerAttrib" json:"tAttrib,omitempty"`
	Operator      TriggerOperator `protobuf:"varint,3,opt,name=operator,proto3,enum=trigger_service.TriggerOperator" json:"operator,omitempty"`
	TPrice        float64         `protobuf:"fixed64,4,opt,name=tPrice,proto3" json:"tPrice,omitempty"`
	TNearPrice    float64         `protobuf:"fixed64,5,opt,name=tNearPrice,proto3" json:"tNearPrice,omitempty"`
	Scrip         string          `protobuf:"bytes,6,opt,name=scrip,proto3" json:"scrip,omitempty"`
	KiteToken     string          `protobuf:"bytes,7,opt,name=kiteToken,proto3" json:"kiteToken,omitempty"`
	ExchangeToken string          `protobuf:"bytes,8,opt,name=exchangeToken,proto3" json:"exchangeToken,omitempty"`
	Exchange      Exchange        `protobuf:"varint,9,opt,name=Exchange,proto3,enum=trigger_service.Exchange" json:"Exchange,omitempty"`
}

func (x *GetTriggerRes) Reset() {
	*x = GetTriggerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTriggerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTriggerRes) ProtoMessage() {}

func (x *GetTriggerRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTriggerRes.ProtoReflect.Descriptor instead.
func (*GetTriggerRes) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetTriggerRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTriggerRes) GetTAttrib() TriggerAttrib {
	if x != nil {
		return x.TAttrib
	}
	return TriggerAttrib_LTP
}

func (x *GetTriggerRes) GetOperator() TriggerOperator {
	if x != nil {
		return x.Operator
	}
	return TriggerOperator_LT
}

func (x *GetTriggerRes) GetTPrice() float64 {
	if x != nil {
		return x.TPrice
	}
	return 0
}

func (x *GetTriggerRes) GetTNearPrice() float64 {
	if x != nil {
		return x.TNearPrice
	}
	return 0
}

func (x *GetTriggerRes) GetScrip() string {
	if x != nil {
		return x.Scrip
	}
	return ""
}

func (x *GetTriggerRes) GetKiteToken() string {
	if x != nil {
		return x.KiteToken
	}
	return ""
}

func (x *GetTriggerRes) GetExchangeToken() string {
	if x != nil {
		return x.ExchangeToken
	}
	return ""
}

func (x *GetTriggerRes) GetExchange() Exchange {
	if x != nil {
		return x.Exchange
	}
	return Exchange_NSE
}

type StartServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Override bool `protobuf:"varint,1,opt,name=override,proto3" json:"override,omitempty"`
	Mock     bool `protobuf:"varint,2,opt,name=mock,proto3" json:"mock,omitempty"`
}

func (x *StartServiceReq) Reset() {
	*x = StartServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServiceReq) ProtoMessage() {}

func (x *StartServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServiceReq.ProtoReflect.Descriptor instead.
func (*StartServiceReq) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{6}
}

func (x *StartServiceReq) GetOverride() bool {
	if x != nil {
		return x.Override
	}
	return false
}

func (x *StartServiceReq) GetMock() bool {
	if x != nil {
		return x.Mock
	}
	return false
}

type StartServiceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *StartServiceRes) Reset() {
	*x = StartServiceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartServiceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServiceRes) ProtoMessage() {}

func (x *StartServiceRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServiceRes.ProtoReflect.Descriptor instead.
func (*StartServiceRes) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{7}
}

func (x *StartServiceRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StopServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Override bool `protobuf:"varint,1,opt,name=override,proto3" json:"override,omitempty"`
	Mock     bool `protobuf:"varint,2,opt,name=mock,proto3" json:"mock,omitempty"`
}

func (x *StopServiceReq) Reset() {
	*x = StopServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServiceReq) ProtoMessage() {}

func (x *StopServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServiceReq.ProtoReflect.Descriptor instead.
func (*StopServiceReq) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{8}
}

func (x *StopServiceReq) GetOverride() bool {
	if x != nil {
		return x.Override
	}
	return false
}

func (x *StopServiceReq) GetMock() bool {
	if x != nil {
		return x.Mock
	}
	return false
}

type StopServiceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *StopServiceRes) Reset() {
	*x = StopServiceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopServiceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServiceRes) ProtoMessage() {}

func (x *StopServiceRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServiceRes.ProtoReflect.Descriptor instead.
func (*StopServiceRes) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{9}
}

func (x *StopServiceRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type DeleteTriggerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerId string `protobuf:"bytes,1,opt,name=triggerId,proto3" json:"triggerId,omitempty"`
}

func (x *DeleteTriggerReq) Reset() {
	*x = DeleteTriggerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTriggerReq) ProtoMessage() {}

func (x *DeleteTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTriggerReq.ProtoReflect.Descriptor instead.
func (*DeleteTriggerReq) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteTriggerReq) GetTriggerId() string {
	if x != nil {
		return x.TriggerId
	}
	return ""
}

type DeleteTriggerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *DeleteTriggerRes) Reset() {
	*x = DeleteTriggerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTriggerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTriggerRes) ProtoMessage() {}

func (x *DeleteTriggerRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTriggerRes.ProtoReflect.Descriptor instead.
func (*DeleteTriggerRes) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteTriggerRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CheckServiceHealthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckServiceHealthReq) Reset() {
	*x = CheckServiceHealthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckServiceHealthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckServiceHealthReq) ProtoMessage() {}

func (x *CheckServiceHealthReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckServiceHealthReq.ProtoReflect.Descriptor instead.
func (*CheckServiceHealthReq) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{12}
}

type CheckServiceHealthRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CheckServiceHealthRes) Reset() {
	*x = CheckServiceHealthRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trigger_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckServiceHealthRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckServiceHealthRes) ProtoMessage() {}

func (x *CheckServiceHealthRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckServiceHealthRes.ProtoReflect.Descriptor instead.
func (*CheckServiceHealthRes) Descriptor() ([]byte, []int) {
	return file_trigger_service_proto_rawDescGZIP(), []int{13}
}

func (x *CheckServiceHealthRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_trigger_service_proto protoreflect.FileDescriptor

var file_trigger_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xe3, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a,
	0x07, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x52, 0x07,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x12, 0x3c, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x72, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x22,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x22, 0x30, 0x0a, 0x10, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x10, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x2d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xe0, 0x02, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x07, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x52, 0x07, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x12, 0x3c, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x72, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x63, 0x72, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x69, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x69, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x41, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6d, 0x6f, 0x63, 0x6b, 0x22, 0x21, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x40, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x6f, 0x63, 0x6b, 0x22, 0x20, 0x0a, 0x0e, 0x53, 0x74,
	0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x30, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x22, 0x22,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x22, 0x27, 0x0a, 0x15, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x6f, 0x6b, 0x2a, 0x18, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x54, 0x50, 0x10, 0x00, 0x2a, 0x33,
	0x0a, 0x0f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x54,
	0x45, 0x10, 0x03, 0x2a, 0x1c, 0x0a, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x07, 0x0a, 0x03, 0x4e, 0x53, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x53, 0x45, 0x10,
	0x01, 0x32, 0xfd, 0x04, 0x0a, 0x0e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x0a, 0x67, 0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x10, 0x67, 0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0c, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x12, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x26, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x42, 0x80, 0x01, 0x0a, 0x2d, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x76, 0x75, 0x6c, 0x63,
	0x61, 0x6e, 0x2e, 0x72, 0x65, 0x76, 0x75, 0x6c, 0x63, 0x61, 0x6e, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x13, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x76, 0x75, 0x6c, 0x63, 0x61, 0x6e, 0x2f,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trigger_service_proto_rawDescOnce sync.Once
	file_trigger_service_proto_rawDescData = file_trigger_service_proto_rawDesc
)

func file_trigger_service_proto_rawDescGZIP() []byte {
	file_trigger_service_proto_rawDescOnce.Do(func() {
		file_trigger_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_trigger_service_proto_rawDescData)
	})
	return file_trigger_service_proto_rawDescData
}

var file_trigger_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_trigger_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_trigger_service_proto_goTypes = []interface{}{
	(TriggerAttrib)(0),            // 0: trigger_service.TriggerAttrib
	(TriggerOperator)(0),          // 1: trigger_service.TriggerOperator
	(Exchange)(0),                 // 2: trigger_service.Exchange
	(*CreateTriggerReq)(nil),      // 3: trigger_service.CreateTriggerReq
	(*CreateTriggerRes)(nil),      // 4: trigger_service.CreateTriggerRes
	(*TriggerStatusReq)(nil),      // 5: trigger_service.TriggerStatusReq
	(*TriggerStatusRes)(nil),      // 6: trigger_service.TriggerStatusRes
	(*GetTriggerReq)(nil),         // 7: trigger_service.GetTriggerReq
	(*GetTriggerRes)(nil),         // 8: trigger_service.GetTriggerRes
	(*StartServiceReq)(nil),       // 9: trigger_service.StartServiceReq
	(*StartServiceRes)(nil),       // 10: trigger_service.StartServiceRes
	(*StopServiceReq)(nil),        // 11: trigger_service.StopServiceReq
	(*StopServiceRes)(nil),        // 12: trigger_service.StopServiceRes
	(*DeleteTriggerReq)(nil),      // 13: trigger_service.DeleteTriggerReq
	(*DeleteTriggerRes)(nil),      // 14: trigger_service.DeleteTriggerRes
	(*CheckServiceHealthReq)(nil), // 15: trigger_service.CheckServiceHealthReq
	(*CheckServiceHealthRes)(nil), // 16: trigger_service.CheckServiceHealthRes
}
var file_trigger_service_proto_depIdxs = []int32{
	0,  // 0: trigger_service.CreateTriggerReq.tAttrib:type_name -> trigger_service.TriggerAttrib
	1,  // 1: trigger_service.CreateTriggerReq.operator:type_name -> trigger_service.TriggerOperator
	2,  // 2: trigger_service.CreateTriggerReq.Exchange:type_name -> trigger_service.Exchange
	0,  // 3: trigger_service.GetTriggerRes.tAttrib:type_name -> trigger_service.TriggerAttrib
	1,  // 4: trigger_service.GetTriggerRes.operator:type_name -> trigger_service.TriggerOperator
	2,  // 5: trigger_service.GetTriggerRes.Exchange:type_name -> trigger_service.Exchange
	3,  // 6: trigger_service.TriggerService.createTrigger:input_type -> trigger_service.CreateTriggerReq
	7,  // 7: trigger_service.TriggerService.getTrigger:input_type -> trigger_service.GetTriggerReq
	5,  // 8: trigger_service.TriggerService.getTriggerStatus:input_type -> trigger_service.TriggerStatusReq
	9,  // 9: trigger_service.TriggerService.startService:input_type -> trigger_service.StartServiceReq
	11, // 10: trigger_service.TriggerService.stopService:input_type -> trigger_service.StopServiceReq
	13, // 11: trigger_service.TriggerService.deteTrigger:input_type -> trigger_service.DeleteTriggerReq
	15, // 12: trigger_service.TriggerService.checkServiceHealth:input_type -> trigger_service.CheckServiceHealthReq
	4,  // 13: trigger_service.TriggerService.createTrigger:output_type -> trigger_service.CreateTriggerRes
	8,  // 14: trigger_service.TriggerService.getTrigger:output_type -> trigger_service.GetTriggerRes
	6,  // 15: trigger_service.TriggerService.getTriggerStatus:output_type -> trigger_service.TriggerStatusRes
	10, // 16: trigger_service.TriggerService.startService:output_type -> trigger_service.StartServiceRes
	12, // 17: trigger_service.TriggerService.stopService:output_type -> trigger_service.StopServiceRes
	14, // 18: trigger_service.TriggerService.deteTrigger:output_type -> trigger_service.DeleteTriggerRes
	16, // 19: trigger_service.TriggerService.checkServiceHealth:output_type -> trigger_service.CheckServiceHealthRes
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_trigger_service_proto_init() }
func file_trigger_service_proto_init() {
	if File_trigger_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trigger_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTriggerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTriggerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTriggerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTriggerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartServiceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopServiceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTriggerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTriggerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckServiceHealthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trigger_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckServiceHealthRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trigger_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trigger_service_proto_goTypes,
		DependencyIndexes: file_trigger_service_proto_depIdxs,
		EnumInfos:         file_trigger_service_proto_enumTypes,
		MessageInfos:      file_trigger_service_proto_msgTypes,
	}.Build()
	File_trigger_service_proto = out.File
	file_trigger_service_proto_rawDesc = nil
	file_trigger_service_proto_goTypes = nil
	file_trigger_service_proto_depIdxs = nil
}
